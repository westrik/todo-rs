#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

PREFIX="${GREEN}[PREPUSH]${NC}"
FAILURE="${RED}FAILED${NC}"
WARNING="${YELLOW}[WARNING]${NC}"
SUCCESS="${GREEN}ok${NC}"

printf "${PREFIX} Clean working copy ... "
git diff --exit-code &>/dev/null
if [ "$?" == 0 ]; then
    printf "${SUCCESS}\n"
else
    printf "${FAILURE}\n"
    exit 1
fi

PREPUSH_RESULT=0

try_run() {
    TEXT=$1
    shift
    printf "${PREFIX} ${TEXT}"
    OUTPUT=$($@ 2>&1)
    if [ "$?" != "0" ]; then
        printf "${FAILURE}, output shown below\n"
        printf "\n\n"
        printf "$OUTPUT"
        printf "\n\n"
		PREPUSH_RESULT=1
        return 1
    else
        printf "${SUCCESS}\n"
    fi
}

TOOLCHAIN_RESULT=0
check_toolchain() {
    printf "${PREFIX} Checking for $1 toolchain ... "
    if [[ $(rustup toolchain list) =~ $1 ]]; then
        printf "${SUCCESS}\n"
    else
        TOOLCHAIN_RESULT=1
        PREPUSH_RESULT=1
        printf "${FAILURE}\n"
    fi
}

run_rustfmt() {
    cargo fmt
    if [[ $(git status -s) ]]; then
        echo "running rustfmt made changes. please review and commit."
        exit 1
    fi
}

printf "${PREFIX} Checking for rustup or current toolchain directive... "
command -v rustup &>/dev/null
if [ "$?" == 0 ]; then
    printf "${SUCCESS}\n"

    check_toolchain stable
    if [ ${TOOLCHAIN_RESULT} == 1 ]; then
        exit 1
    fi

    try_run "Building... " cargo build --color=always
    try_run "Testing... " cargo test --color=always
    try_run "Linting... " cargo clippy --color=always -- -D warnings
    try_run "Reformatting... " run_rustfmt
fi


printf "${PREFIX} Checking unpushed commit messages... "
IFS=$'\n'
for commit in `git log origin/master..HEAD --pretty=format:%s`; do
    if [[ ! $commit =~ ^[a-z\[].*$ ]]; then 
        printf "${FAILURE}\n"
        printf "Commit message ${RED}\"$commit\"${NC} does not meet style requirements.\n" 
        exit 1
    fi
done
printf "${SUCCESS}\n"

exit $PREPUSH_RESULT
